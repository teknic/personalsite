<?php

/**
 * Hold all the core related customizations.
 */

/**
 *  Implements hook_preprocess_HOOK().
 */
function bt_core_preprocess_page(&$variables) {
  $search  = drupal_get_form('search_block_form');
  $search['#attributes']['class'][] = 'col-sm-3';
  $search['#attributes']['class'][] = 'pull-right';
  $variables['search'] = drupal_render($search);

  $categories = bt_core_categories();
  $variables['categories'] = $categories;

  $view = views_get_view('recent_posts');
  $view->set_display('block');
  $view->pre_execute();
  $view->execute();
  $variables['recent_posts'] = $view->render('block');

  if (arg(0) == 'about') {
    $variables['page_description'] = t("I told you, you didn't want to know but, now you know.");
  }
}

/**
 * Gets all categories for a vocab
 *
 * @return string
 * @throws Exception
 */
function bt_core_categories() {
  // Get a listing of all terms in Tag vocabulary.
  $vocab = taxonomy_vocabulary_machine_name_load('tags');
  $sql  = "SELECT t.tid, COUNT(t.tid) AS used FROM {taxonomy_term_data} t ";
  $sql .= "LEFT JOIN {taxonomy_index} ti ON t.tid = ti.tid ";
  $sql .= "WHERE t.vid = :vid ";
  $sql .= "GROUP BY t.tid";
  $result = db_query($sql, array(':vid' => $vocab->vid));
  $terms = array();
  foreach ($result as $row) {
    $term = taxonomy_term_load($row->tid);
    $term->used = $row->used;
    $terms[] = $term;
  }
  $output = theme('bt_core_categories', array('terms' => $terms));
  return $output;
}

/**
 *  Implements hook_theme().
 */
function bt_core_theme($existing, $type, $theme, $path) {
  $items = array();

  $items['bt_core_categories'] = array(
    'variables' => array('terms' => NULL),
    'template' => 'categories',
    'path' => drupal_get_path('module', 'bt_core') . '/templates',
  );

  return $items;
}

/**
 * @param $vars
 */
function bt_core_preprocess_views_view_table(&$vars) {
  if (isset($vars['view']->name) && $vars['view']->name == 'recent_posts') {
    $vars['classes_array'][] = 'table table-striped';
  }
}
